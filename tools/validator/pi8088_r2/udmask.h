const struct {
	int opcode;
	int ext;
	int mask;
} flag_mask_lookup[] = {
	{ 0x08, -1, 0|VXT_AUXILIARY },
	{ 0x09, -1, 0|VXT_AUXILIARY },
	{ 0x0A, -1, 0|VXT_AUXILIARY },
	{ 0x0B, -1, 0|VXT_AUXILIARY },
	{ 0x0C, -1, 0|VXT_AUXILIARY },
	{ 0x0D, -1, 0|VXT_AUXILIARY },
	{ 0x20, -1, 0|VXT_AUXILIARY },
	{ 0x21, -1, 0|VXT_AUXILIARY },
	{ 0x22, -1, 0|VXT_AUXILIARY },
	{ 0x23, -1, 0|VXT_AUXILIARY },
	{ 0x24, -1, 0|VXT_AUXILIARY },
	{ 0x25, -1, 0|VXT_AUXILIARY },
	{ 0x27, -1, 0|VXT_OVERFLOW },
	{ 0x2F, -1, 0|VXT_OVERFLOW },
	{ 0x30, -1, 0|VXT_AUXILIARY },
	{ 0x31, -1, 0|VXT_AUXILIARY },
	{ 0x32, -1, 0|VXT_AUXILIARY },
	{ 0x33, -1, 0|VXT_AUXILIARY },
	{ 0x34, -1, 0|VXT_AUXILIARY },
	{ 0x35, -1, 0|VXT_AUXILIARY },
	{ 0x37, -1, 0|VXT_PARITY|VXT_ZERO|VXT_SIGN|VXT_OVERFLOW },
	{ 0x3F, -1, 0|VXT_PARITY|VXT_ZERO|VXT_SIGN|VXT_OVERFLOW },
	{ 0x69, -1, 0|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN },
	{ 0x6B, -1, 0|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN },
	{ 0x80, 1, 0|VXT_AUXILIARY },
	{ 0x80, 4, 0|VXT_AUXILIARY },
	{ 0x80, 6, 0|VXT_AUXILIARY },
	{ 0x81, 1, 0|VXT_AUXILIARY },
	{ 0x81, 4, 0|VXT_AUXILIARY },
	{ 0x81, 6, 0|VXT_AUXILIARY },
	{ 0x82, 1, 0|VXT_AUXILIARY },
	{ 0x82, 4, 0|VXT_AUXILIARY },
	{ 0x82, 6, 0|VXT_AUXILIARY },
	{ 0x83, 1, 0|VXT_AUXILIARY },
	{ 0x83, 4, 0|VXT_AUXILIARY },
	{ 0x83, 6, 0|VXT_AUXILIARY },
	{ 0x84, -1, 0|VXT_AUXILIARY },
	{ 0x85, -1, 0|VXT_AUXILIARY },
	{ 0xA8, -1, 0|VXT_AUXILIARY },
	{ 0xA9, -1, 0|VXT_AUXILIARY },
	{ 0xC0, 0, 0|VXT_OVERFLOW },
	{ 0xC0, 1, 0|VXT_OVERFLOW },
	{ 0xC0, 2, 0|VXT_OVERFLOW },
	{ 0xC0, 3, 0|VXT_OVERFLOW },
	{ 0xC0, 4, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xC0, 5, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xC0, 6, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xC0, 7, 0|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xC1, 0, 0|VXT_OVERFLOW },
	{ 0xC1, 1, 0|VXT_OVERFLOW },
	{ 0xC1, 2, 0|VXT_OVERFLOW },
	{ 0xC1, 3, 0|VXT_OVERFLOW },
	{ 0xC1, 4, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xC1, 5, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xC1, 6, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xC1, 7, 0|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD0, 4, 0|VXT_AUXILIARY },
	{ 0xD0, 5, 0|VXT_AUXILIARY },
	{ 0xD0, 6, 0|VXT_AUXILIARY },
	{ 0xD0, 7, 0|VXT_AUXILIARY },
	{ 0xD1, 4, 0|VXT_AUXILIARY },
	{ 0xD1, 5, 0|VXT_AUXILIARY },
	{ 0xD1, 6, 0|VXT_AUXILIARY },
	{ 0xD1, 7, 0|VXT_AUXILIARY },
	{ 0xD2, 0, 0|VXT_OVERFLOW },
	{ 0xD2, 1, 0|VXT_OVERFLOW },
	{ 0xD2, 2, 0|VXT_OVERFLOW },
	{ 0xD2, 3, 0|VXT_OVERFLOW },
	{ 0xD2, 4, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD2, 5, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD2, 6, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD2, 7, 0|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD3, 0, 0|VXT_OVERFLOW },
	{ 0xD3, 1, 0|VXT_OVERFLOW },
	{ 0xD3, 2, 0|VXT_OVERFLOW },
	{ 0xD3, 3, 0|VXT_OVERFLOW },
	{ 0xD3, 4, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD3, 5, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD3, 6, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD3, 7, 0|VXT_AUXILIARY },
	{ 0xD4, -1, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD4, -1, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD5, -1, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xD5, -1, 0|VXT_CARRY|VXT_AUXILIARY|VXT_OVERFLOW },
	{ 0xF6, 0, 0|VXT_AUXILIARY },
	{ 0xF6, 1, 0|VXT_AUXILIARY },
	{ 0xF6, 4, 0|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN },
	{ 0xF6, 5, 0|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN },
	{ 0xF6, 6, 0|VXT_CARRY|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN|VXT_OVERFLOW },
	{ 0xF6, 7, 0|VXT_CARRY|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN|VXT_OVERFLOW },
	{ 0xF7, 0, 0|VXT_AUXILIARY },
	{ 0xF7, 1, 0|VXT_AUXILIARY },
	{ 0xF7, 4, 0|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN },
	{ 0xF7, 5, 0|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN },
	{ 0xF7, 6, 0|VXT_CARRY|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN|VXT_OVERFLOW },
	{ 0xF7, 7, 0|VXT_CARRY|VXT_PARITY|VXT_AUXILIARY|VXT_ZERO|VXT_SIGN|VXT_OVERFLOW },
	{-1, -1, -1},
};
