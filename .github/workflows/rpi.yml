name: RasberryPi

on:
  push:
    branches: [ "develop", "edge", "release" ]
  pull_request:
    branches: [ "develop" ]

  workflow_dispatch:

env:
  VXT_VERSION: 1.2.0
  
jobs:
  rpi-build:
    name: RPI3
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install cppcheck gcc-arm-none-eabi
          curl -L -o circle.zip https://github.com/virtualxt/circle/archive/refs/heads/master.zip
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default && unzip butler.zip -d butler
          curl -L -o premake5.tar.gz https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-linux.tar.gz && mkdir premake5 && tar -xf premake5.tar.gz -C premake5
          echo "${GITHUB_WORKSPACE}/butler" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/premake5" >> $GITHUB_PATH

      - name: Test & Check
        run: |
          premake5 check
          premake5 --test gmake
          make test
          make clean         

      - name: Build (bootloader)
        run: |
          rm -rf "${GITHUB_WORKSPACE}/package"
          mkdir -p "${GITHUB_WORKSPACE}/package"
          export CIRCLEHOME="${GITHUB_WORKSPACE}/circle-master"
          rm -rf "${CIRCLEHOME}"
          cd "${GITHUB_WORKSPACE}"
          unzip circle.zip
          cd "${CIRCLEHOME}"
          ./configure
          make -C "${CIRCLEHOME}/boot"
          cp "${CIRCLEHOME}"/boot/*.dtb "${GITHUB_WORKSPACE}/package"
          cp "${CIRCLEHOME}"/boot/*.dat "${GITHUB_WORKSPACE}/package"
          cp "${CIRCLEHOME}"/boot/*.bin "${GITHUB_WORKSPACE}/package"
          cp "${CIRCLEHOME}"/boot/*.elf "${GITHUB_WORKSPACE}/package"
          cp "${CIRCLEHOME}/boot/config32.txt" "${GITHUB_WORKSPACE}/package/config.txt"
          
      - name: Build (RaspberryPi3)
        run: |
          export CIRCLEHOME="${GITHUB_WORKSPACE}/circle-master"
          rm -rf "${CIRCLEHOME}"
          cd "${GITHUB_WORKSPACE}"
          unzip circle.zip
          cd "${CIRCLEHOME}"
          ./configure -r 3
          ./makeall
          make -C "${CIRCLEHOME}/addon/fatfs"
          make -C "${CIRCLEHOME}/addon/SDCard"
          make -C "${GITHUB_WORKSPACE}/front/rpi"
          cp "${GITHUB_WORKSPACE}/front/rpi/kernel8-32.img" "${GITHUB_WORKSPACE}"

      - name: Build (RaspberryPi4)
        run: |
          export CIRCLEHOME="${GITHUB_WORKSPACE}/circle-master"
          rm -rf "${CIRCLEHOME}"
          cd "${GITHUB_WORKSPACE}"
          unzip circle.zip
          cd "${CIRCLEHOME}"
          ./configure -r 4
          ./makeall
          make -C "${CIRCLEHOME}/addon/fatfs"
          make -C "${CIRCLEHOME}/addon/SDCard"
          make -C "${GITHUB_WORKSPACE}/front/rpi"
          cp "${GITHUB_WORKSPACE}/front/rpi/kernel7l.img" "${GITHUB_WORKSPACE}"

      - name: Package
        run: |
          export CIRCLEHOME="${GITHUB_WORKSPACE}/circle-master"
          ./tools/package/itch/package.rasberrypi.sh

      - name: Deploy
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: if [[ $GITHUB_REF_NAME =~ ^(edge|release)$ ]]; then ./tools/package/itch/push-rasberrypi.sh; fi
